use('lib/stdout.js');
// Messages
// ========

// MIXIN
comment($string) {
  unquote('/* ' + replace('(?![\t ])\s\s*', '\n * ', $string) + ' */');
}


// True Message
// ------------
/// Output a message to CSS comments,
/// or comm&& line terminal (via debug/warn)
/// @access private
/// @group private-message
/// @param {String} $message -
///   Message to output
/// @param {String} $output [comments] -
///   Type of output, either `comments`, `terminal`, `debug` or `warn`
_true-message($message, $output = 'comments', $comment-padding = 0) {
  $pad = ''
  
  if ($comment-padding > 0) {
    for $i in ((0)..(($comment-padding) - 1)) {
      $pad = $pad + ' ';
    }
  }

  for $line in ($message) {
    $comments = index($output, 'comments');

    if ($comments != null && $comments >= 0) {
      $tmp = $pad + $line;

      comment($tmp);
    }

    $debug = index($output, 'debug');
    $terminal = index($output, 'terminal');
    if (($debug != null && $debug >= 0) || ($terminal != null && $terminal >= 0)) {
      stdout($line);
    }

    $warn = index($output, 'warn');
    if ($warn != null && $warn >= 0) {
      stdout($line, 'warn');
    }
  }
}
